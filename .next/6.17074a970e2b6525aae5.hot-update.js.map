{"version":3,"file":"6.17074a970e2b6525aae5.hot-update.js","sources":["webpack:///pages/restaurant.js"],"sourcesContent":["import React from 'react';\nimport dynamic from 'next/dynamic';\nimport Head from 'next/head';\nimport api from '../api';\nimport withLayout from '../components/withLayout';\nimport { buildImageaArray, getCategoryIcon, getGoogleMapsUrl, getWowClass } from '/components/helpers';\n\nconst Lightbox = dynamic(import('react-image-lightbox'));\n\nclass Restaurant extends React.PureComponent {\n  state = {\n    photoIndex: 0,\n    isOpen: false,\n  }\n\n  static async getInitialProps({ query: { slug }, res }) {\n    const post = (await api.posts().slug(slug).embed())[0];\n    if (post) {\n      return { post };\n    }\n\n    if (res) {\n      res.statusCode = 404;\n    }\n    return { error: true };\n  }\n\n  componentWillMount() {\n    this.setState({\n      post: this.props.post\n    });\n  };\n\n  componentDidMount() {\n    if(typeof window !== 'undefined') {\n      window.WOW = require('wowjs');\n\n      window.wow = new WOW.WOW({\n        live: true\n      });\n      window.wow.init();\n    }\n  }\n\n  initializeLightbox = (post) => {\n    window.images = [];\n    window.images = buildImageaArray(post);\n    this.setState({ isOpen: true });\n  }\n\n  render() {\n    const { post, photoIndex, isOpen } = this.state;\n    const title = 'Eat This Beef, bruh';\n\n    return (\n      <div>\n        <Head>\n          <title>{title}</title>\n          <meta property=\"og:title\" content={title} />\n          <meta property=\"og:image\" content={'/static/img/' + post.img} />\n          <meta name=\"twitter:title\" content={title} />\n          <meta name=\"twitter:image\" content={'/static/img/' + post.img} />\n        </Head>\n        <section>\n          <img src={'/static/img/logo.png'} className={'logo'} />\n          <img src={'/static/img/logo-stacked.png'} className={'logo stacked'} />\n        </section>\n        {isOpen && (\n          <Lightbox\n            mainSrc={window.images[photoIndex].src}\n            nextSrc={window.images[(photoIndex + 1) % window.images.length].src}\n            prevSrc={window.images[(photoIndex + window.images.length - 1) % window.images.length].src}\n            imageTitle={window.images[photoIndex].title}\n            animationOnKeyInput={'true'}\n            onCloseRequest={() => this.setState({ isOpen: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + window.images.length - 1) % window.images.length,\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % window.images.length,\n              })\n            }\n          />\n        )}\n        <section className={'restaurant-list'}>\n          <section key={post.id} className={'restaurant single '  + getWowClass(this.window)} data-wow-duration=\".5s\">\n            <h1 dangerouslySetInnerHTML={{ __html: post.title.rendered }} />\n            <img src={'/static/img/' + getCategoryIcon(post.section) + '.png'} className={'icon'}/>          \n            <div className={'address'}>\n              <a href={getGoogleMapsUrl(post)} target=\"_blank\">{post.addressstreet + ', ' + post.addresscity + ', ' + post.addressstate}</a>\n            </div>\n            <button className={'img-thumb'} onClick={() => this.initializeLightbox(post)}>\n              <img src={'/static/img/' +  post.imgthumb}/>\n            </button>\n            <div className={'copy'}>\n              <div dangerouslySetInnerHTML={{ __html: post.content.rendered }} />                \n            </div>\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default withLayout(Restaurant);\n\n\n\n// WEBPACK FOOTER //\n// pages/restaurant.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;;;;;AAkCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;AArBA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;;;AAQA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AADA;AADA;AAKA;AAAA;AAEA;AADA;AADA;AAZA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;AAzFA;;AACA;AACA;;AADA;AACA;AAAA;;;;;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAhBA;AACA;AAiGA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}